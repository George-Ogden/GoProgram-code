class Umpire{constructor(a){this.board=new Matrix(a,a),this.size=a}check_state(){return 0}play(c,d){this.board.reset(),this.board.data[this.size-1][(this.size-1)/2]=-1;for(let a=0;a<this.size*this.size;a++){a%2==0?this.board.add(c.move(this.board,1)):this.board.add(d.move(this.board,-1));let b=this.check_state();if(0!=b)return b}return 0}async challenge(f,c=Math.random()>.5?1:0){this.board.reset();for(let b=-c;b<this.size*this.size-c;b++){if(displayBoard(this.board),b%2==0){let d=await f.move(this.board,1);animateMove(...d.find(1)),finishMove(),this.board.add(d)}else{let a=new Promise(a=>move_promise=a);a=await a,this.board.data[Math.floor(a[0])][a[1]]=-1,animateMove(...a)}let e=this.check_state();if(displayBoard(this.board),0!=e)return endGame(),e}return displayBoard(this.board),endGame(),0}spectate(d,e,a=Math.random()>.5?1:0){this.board.reset(),this.board.data[this.size-1][(this.size-1)/2]=2*a-1;for(let b=-a;b<this.size*this.size-a;b++){Matrix.map(this.board,a=>a>0?"X":a<0?"O":" ").show(),b%2==0?this.board.add(d.move(this.board,1)):this.board.add(e.move(this.board,-1));let c=this.check_state();if(0!=c)return Matrix.map(this.board,a=>a>0?"X":a<0?"O":" ").show(),c}return Matrix.map(this.board,a=>a>0?"X":a<0?"O":" ").show(),0}static shuffle(a){for(let b=a.length-1;b>0;b--){let c=Math.floor(Math.random()*(b+1));a[b],a[c]=a[c],a[b]}return a}}