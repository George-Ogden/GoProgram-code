class Umpire{constructor(t){this.board=new Matrix(t,t),this.size=t}check_state(){return 0}play(t,s){this.board.reset(),this.board.data[this.size-1][(this.size-1)/2]=-1;for(let e=0;e<this.size*this.size;e++){e%2==0?this.board.add(t.move(this.board,1)):this.board.add(s.move(this.board,-1));let i=this.check_state();if(0!=i)return i}return 0}async challenge(t,s=Math.random()>.5?1:0){this.board.reset();for(let e=-s;e<this.size*this.size-s;e++){if(displayBoard(this.board),e%2==0){let i=await t.move(this.board,1);animateMove(...i.find(1)),finishMove(),this.board.add(i)}else{let a=new Promise(t=>move_promise=t);a=await a,this.board.data[Math.floor(a[0])][a[1]]=-1,animateMove(...a)}let r=this.check_state();if(displayBoard(this.board),0!=r)return endGame(),r}return displayBoard(this.board),endGame(),0}spectate(t,s,e=Math.random()>.5?1:0){this.board.reset(),this.board.data[this.size-1][(this.size-1)/2]=2*e-1;for(let i=-e;i<this.size*this.size-e;i++){Matrix.map(this.board,t=>t>0?"X":t<0?"O":" ").show(),i%2==0?this.board.add(t.move(this.board,1)):this.board.add(s.move(this.board,-1));let a=this.check_state();if(0!=a)return Matrix.map(this.board,t=>t>0?"X":t<0?"O":" ").show(),a}return Matrix.map(this.board,t=>t>0?"X":t<0?"O":" ").show(),0}static shuffle(t){for(let s=t.length-1;s>0;s--){let e=Math.floor(Math.random()*(s+1));t[s],t[e]=t[e],t[s]}return t}}